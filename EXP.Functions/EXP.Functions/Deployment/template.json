{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "The name of the function app that you wish to create."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[replace(resourceGroup().name, '-', '')]",
            "metadata": {
                "description": "Storage Account name"
            }
        },
        "eventHubNamespace": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Event Hub namespace"
            }
        },
        "eventHubName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Event Hub name"
            }
        }
    },
    "variables": {
        "functionAppName": "[parameters('appName')]",
        "hostingPlanName": "[parameters('appName')]",
        "storageAccountName": "[parameters('storageAccountName')]",
        "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "eventHubNamespace": "[parameters('eventHubNamespace')]",
        "eventHubName": "[parameters('eventHubName')]",
        "eventHubManageRuleName": "Manage",        
        "eventHubManageRuleId": "[concat(resourceGroup().id,'/providers/','Microsoft.EventHub/namespaces/eventhubs/authorizationRules', variables('eventHubManageRuleName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.EventHub/namespaces",
            "name": "[variables('eventHubNamespace')]",
            "apiVersion": "2015-08-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Basic",
                "tier": "Basic"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "name": "[concat(variables('eventHubNamespace'), '/', variables('eventHubName'))]",
            "apiVersion": "2015-08-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespace'))]"
            ],
            "properties": {
                "path": "[parameters('eventHubName')]"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
            "name": "[concat(variables('eventHubNamespace'), '/', variables('eventHubName'), '/', variables('eventHubManageRuleName'))]",
            "apiVersion": "2017-03-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespace'), variables('eventHubName'))]"
            ],
            "properties": {
                "Rights": [ "Manage", "Send", "Receive" ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "kind": "Storage",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2016-09-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "computeMode": "Dynamic",
                "sku": "Dynamic"
            }
        },
        {
            "apiVersion": "2016-08-01",
            "type": "Microsoft.Web/sites",
            "name": "[variables('functionAppName')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespace'), variables('eventHubName'))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', variables('eventHubNamespace'), variables('eventHubName'), variables('eventHubManageRuleName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            // AzureWebJobsDashboard is used to log to Azure Table storage and power the Monitor tab in the portal.
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            // The Azure Functions runtime uses the AzureWebJobsStorage connection string to create internal queues.
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            // Storage account connection string where the function app code and configuration are stored.
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            // Storage account file path where the function app code and configuration are stored
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionAppName'))]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~1"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "6.5.0"
                        },
                        {
                            "name": "EventHubName",
                            "value": "[variables('eventHubName')]"
                        },
                        {
                            "name": "EventHubConnection",
                            "value": "[listkeys(variables('eventHubManageRuleId'), '2015-05-01-preview')).primaryConnectionString]"
                        }
                    ]
                }
            }
        }
    ]
}